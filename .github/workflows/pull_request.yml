name: Pull request workflow

on:
  pull_request:
    branches: [ main ]

jobs:
  commit-check:
    name: Conventional Commits
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: webiny/action-conventional-commits@v1.3.0
  
  lint-format-test:
    runs-on: ubuntu-latest
    needs: commit-check
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: uv.lock
      - name: Install dev dependencies
        run: uv sync --only-dev
      # Update output format to enable automatic inline annotations.
      - name: Run Ruff Linter
        run: uv run ruff check --output-format=github .
      # Update output format to enable automatic inline annotations.
      - name: Run Ruff formatter
        run: uv run ruff format --check
      - name: Run mypy static type checker
        run: uv run mypy src/
      - name: Run pytest
        run: uv run pytest --cov=src
  

    name: Deploy RC to TestPyPI
    runs-on: ubuntu-latest
    needs: release-rc
    if: ${{ needs.release-rc.outputs.released == 'true' }}

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Setup | Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: rc-distribution-artifacts-${{ github.event.pull_request.number }}
          path: dist

      - name: Publish RC to TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          repository-url: https://test.pypi.org/legacy/
          packages-dir: dist
          print-hash: true
          verbose: true